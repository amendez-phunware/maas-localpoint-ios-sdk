<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/ILPLocationProvider.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/ILPLocationProvider</TokenIdentifier>
			<Abstract type="html">A location provider acts as a store for locations deemed &amp;amp;quot;relevant&amp;amp;quot; by the SDK.</Abstract>
			<DeclaredIn>ILPLocationProvider.h</DeclaredIn>
            <Availability type="html">(
    &quot;1.0.0&quot;
)</Availability>
			
			<NodeRef refid="16"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ILPLocationProvider/addListener:</TokenIdentifier>
			<Abstract type="html">Adds the given listener to this provider.</Abstract>
			<DeclaredIn>ILPLocationProvider.h</DeclaredIn>
			
			<Declaration>- (void)addListener:(id&lt;ILPLocationListener&gt;)listener</Declaration>
			<Parameters>
				<Parameter>
					<Name>listener</Name>
					<Abstract type="html">The listener to be added (must never be &lt;code&gt;nil&lt;/code&gt;)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addListener:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ILPLocationProvider/getFilterFactory</TokenIdentifier>
			<Abstract type="html">Returns the {@link ILPLocationFilterFactory location filter factory} associated with this provider.</Abstract>
			<DeclaredIn>ILPLocationProvider.h</DeclaredIn>
			
			<Declaration>- (id&lt;ILPLocationFilterFactory&gt;)getFilterFactory</Declaration>
			
			<ReturnValue><Abstract type="html">the {@link ILPLocationFilterFactory location filter factory} associated with this provider</Abstract></ReturnValue>
			<Anchor>//api/name/getFilterFactory</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ILPLocationProvider/getLocation:</TokenIdentifier>
			<Abstract type="html">Returns a location with the given identifier.</Abstract>
			<DeclaredIn>ILPLocationProvider.h</DeclaredIn>
			
			<Declaration>- (id&lt;ILPLocation&gt;)getLocation:(id&lt;ILPID&gt;)id_</Declaration>
			<Parameters>
				<Parameter>
					<Name>id_</Name>
					<Abstract type="html">The identifier of the location to be returned (must never be &lt;code&gt;nil&lt;/code&gt;)</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the location with the given identifier, if such a location is currently known to this provider, or &lt;code&gt;nil&lt;/code&gt; otherwise</Abstract></ReturnValue>
			<Anchor>//api/name/getLocation:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ILPLocationProvider/getLocations</TokenIdentifier>
			<Abstract type="html">Returns all locations known to this provider.</Abstract>
			<DeclaredIn>ILPLocationProvider.h</DeclaredIn>
			
			<Declaration>- (NSArray *)getLocations</Declaration>
			
			<ReturnValue><Abstract type="html">the (possibly empty) list of locations known to this provider</Abstract></ReturnValue>
			<Anchor>//api/name/getLocations</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ILPLocationProvider/getLocations:withOrdering:</TokenIdentifier>
			<Abstract type="html">Returns all locations filtered by the given filter and sorted by the given ordering.</Abstract>
			<DeclaredIn>ILPLocationProvider.h</DeclaredIn>
			
			<Declaration>- (NSArray *)getLocations:(id&lt;ILPFilter&gt;)filter withOrdering:(id&lt;ILPOrdering&gt;)ordering</Declaration>
			<Parameters>
				<Parameter>
					<Name>filter</Name>
					<Abstract type="html">The filter to be applied to the locations to be returned (if &lt;code&gt;nil&lt;/code&gt;, acts as a filter that accepts all -- see {@link ILPLocationFilterFactory#getAllFilter()})</Abstract>
				</Parameter><Parameter>
					<Name>ordering</Name>
					<Abstract type="html">The ordering to be applied to the locations to be returned (if &lt;code&gt;nil&lt;/code&gt;, acts as {@link ILPLocationOrderingFactory#getAscendingDistanceOrdering()})</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the (possibly empty) list of locations that satisfy the given filter and ordering</Abstract></ReturnValue>
			<Anchor>//api/name/getLocations:withOrdering:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ILPLocationProvider/getOrderingFactory</TokenIdentifier>
			<Abstract type="html">Returns the {@link ILPLocationOrderingFactory location ordering factory} associated with this provider.</Abstract>
			<DeclaredIn>ILPLocationProvider.h</DeclaredIn>
			
			<Declaration>- (id&lt;ILPLocationOrderingFactory&gt;)getOrderingFactory</Declaration>
			
			<ReturnValue><Abstract type="html">the {@link ILPLocationOrderingFactory location ordering factory} associated with this provider</Abstract></ReturnValue>
			<Anchor>//api/name/getOrderingFactory</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ILPLocationProvider/removeAllListeners</TokenIdentifier>
			<Abstract type="html">Removes all listeners from this provider.</Abstract>
			<DeclaredIn>ILPLocationProvider.h</DeclaredIn>
			
			<Declaration>- (void)removeAllListeners</Declaration>
			
			
			<Anchor>//api/name/removeAllListeners</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ILPLocationProvider/removeListener:</TokenIdentifier>
			<Abstract type="html">Removes the given listener from this provider.</Abstract>
			<DeclaredIn>ILPLocationProvider.h</DeclaredIn>
			
			<Declaration>- (void)removeListener:(id&lt;ILPLocationListener&gt;)listener</Declaration>
			<Parameters>
				<Parameter>
					<Name>listener</Name>
					<Abstract type="html">The listener to remove (must never be &lt;code&gt;nil&lt;/code&gt;)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeListener:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
        
        
	</File>
</Tokens>